"use strict";(self.webpackChunkcookbook=self.webpackChunkcookbook||[]).push([[5687],{47340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var o=n(74848),a=n(28453);const l={slug:"mulesoft-ollama",authors:["alexandramartinez"],tags:["mulesoft","mac","llm-open-connector","ollama"],date:new Date("2024-11-29T00:00:00.000Z")},r="LLM Open Connector + MuleSoft + Ollama",i={permalink:"/einstein-platform/mulesoft-ollama",source:"@site/cookbook/llm-open-connector-mulesoft-mac-ollama.md",title:"LLM Open Connector + MuleSoft + Ollama",description:"Learn how to implement Salesforce's LLM Open Connector using MuleSoft and the MuleSoft AI Chain (MAC) project. This recipe relies on locally hosted Ollama for quick testing. The Mule application and MAC project run in CloudHub to expose the API.",date:"2024-11-29T00:00:00.000Z",tags:[{inline:!1,label:"mulesoft",permalink:"/einstein-platform/tags/mulesoft"},{inline:!1,label:"mac",permalink:"/einstein-platform/tags/mac"},{inline:!1,label:"llm-open-connector",permalink:"/einstein-platform/tags/llm-open-connector"},{inline:!1,label:"ollama",permalink:"/einstein-platform/tags/ollama"}],readingTime:6.81,hasTruncateMarker:!0,authors:[{name:"Alex Martinez",title:"Developer Advocate @ Salesforce",url:"https://github.com/alexandramartinez",page:{permalink:"/einstein-platform/authors/alexandramartinez"},socials:{github:"https://github.com/alexandramartinez",linkedin:"https://www.linkedin.com/in/alexandra-n-martinez/"},imageURL:"https://github.com/alexandramartinez.png",key:"alexandramartinez"}],frontMatter:{slug:"mulesoft-ollama",authors:["alexandramartinez"],tags:["mulesoft","mac","llm-open-connector","ollama"],date:"2024-11-29T00:00:00.000Z"},unlisted:!1,prevItem:{title:"LLM Open Connector + MuleSoft + Cerebras",permalink:"/einstein-platform/mulesoft"}},s={authorsImageUrls:[void 0]},c=[];function m(e){const t={a:"a",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(t.p,{children:["Learn how to implement Salesforce's ",(0,o.jsx)(t.a,{href:"/docs/apis/llm-open-connector/",children:"LLM Open Connector"})," using MuleSoft and the ",(0,o.jsx)(t.a,{href:"https://mac-project.ai/",children:"MuleSoft AI Chain (MAC)"})," project. This recipe relies on locally hosted ",(0,o.jsx)(t.a,{href:"https://ollama.com/",children:"Ollama"})," for quick testing. The Mule application and MAC project run in CloudHub to expose the API."]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var o=n(96540);const a={},l=o.createContext(a);function r(e){const t=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(l.Provider,{value:t},e.children)}}}]);