"use strict";(self.webpackChunkcookbook=self.webpackChunkcookbook||[]).push([[4036],{5626:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>h});var r=i(74848),s=i(28453),o=i(13554),t=i.n(o);const l={slug:"huggingface",authors:["msrivastav13"],tags:["huggingface","heroku","llm-open-connector"],date:new Date("2024-09-12T00:00:00.000Z")},c="LLM Open Connector + Hugging Face",a={permalink:"/einstein-platform/huggingface",source:"@site/cookbook/llm-open-connector-huggingface.mdx",title:"LLM Open Connector + Hugging Face",description:"Learn how to implement Salesforce's LLM Open Connector with the Hugging Face Serverless Inference API for LLM models that support Chat Completion. We also cover how to implement and deploy the connector as a Node.js app on Heroku.",date:"2024-09-12T00:00:00.000Z",tags:[{inline:!1,label:"huggingface",permalink:"/einstein-platform/tags/huggingface"},{inline:!1,label:"heroku",permalink:"/einstein-platform/tags/heroku"},{inline:!1,label:"llm-open-connector",permalink:"/einstein-platform/tags/llm-open-connector"}],readingTime:7.99,hasTruncateMarker:!0,authors:[{name:"Mohith",title:"Developer Advocate @ Salesforce",url:"https://github.com/msrivastav13",page:{permalink:"/einstein-platform/authors/msrivastav-13"},socials:{github:"https://github.com/msrivastav13"},imageURL:"https://github.com/msrivastav13.png",key:"msrivastav13"}],frontMatter:{slug:"huggingface",authors:["msrivastav13"],tags:["huggingface","heroku","llm-open-connector"],date:"2024-09-12T00:00:00.000Z"},unlisted:!1,prevItem:{title:"Introducing the LLM Open Connector",permalink:"/einstein-platform/open-connector"},nextItem:{title:"LLM Open Connector + AWS",permalink:"/einstein-platform/aws"}},d={authorsImageUrls:[void 0]},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Tutorial Video",id:"tutorial-video",level:2},{value:"Set Up Your Local Environment",id:"set-up-your-local-environment",level:2},{value:"Project Structure",id:"project-structure",level:2},{value:"Project Description",id:"project-description",level:3},{value:"Configure Your Local Environment",id:"configure-your-local-environment",level:2},{value:"Test Your Application Locally",id:"test-your-application-locally",level:2},{value:"Prepare for Heroku Deployment",id:"prepare-for-heroku-deployment",level:2},{value:"Update Your Default Branch",id:"update-your-default-branch",level:2},{value:"Deploy to Heroku",id:"deploy-to-heroku",level:2},{value:"Test Your Deployed Application",id:"test-your-deployed-application",level:2},{value:"Bring Your Connected Endpoint to Salesforce Model Builder",id:"bring-your-connected-endpoint-to-salesforce-model-builder",level:2},{value:"Current Features",id:"current-features",level:2},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Current Security Measures",id:"current-security-measures",level:2},{value:"Important Considerations",id:"important-considerations",level:2},{value:"Conclusion",id:"conclusion",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Learn how to implement Salesforce's ",(0,r.jsx)(n.a,{href:"/docs/apis/llm-open-connector/",children:"LLM Open Connector"})," with the Hugging Face ",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/index",children:"Serverless Inference API"})," for LLM models that support ",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/en/tasks/chat-completion",children:"Chat Completion"}),". We also cover how to implement and deploy the connector as a Node.js app on Heroku."]}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before you begin, make sure that your local environment meets these prerequisites:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Node.js and npm are installed on your local machine."}),"\n",(0,r.jsxs)(n.li,{children:["You have a Heroku account. (Sign up at ",(0,r.jsx)(n.a,{href:"https://signup.heroku.com/",children:"https://signup.heroku.com/"}),".)"]}),"\n",(0,r.jsxs)(n.li,{children:["Heroku CLI is installed on your local machine (",(0,r.jsx)(n.a,{href:"https://devcenter.heroku.com/articles/heroku-cli",children:"https://devcenter.heroku.com/articles/heroku-cli"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"Git is installed on your local machine."}),"\n",(0,r.jsxs)(n.li,{children:["You have a Hugging Face account with an API key (",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/hub/en/security-tokens",children:"https://huggingface.co/docs/hub/en/security-tokens"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tutorial-video",children:"Tutorial Video"}),"\n",(0,r.jsxs)(n.p,{children:["View a walkthrough on using any LLM with the Open Connector on the ",(0,r.jsx)(n.a,{href:"https://www.youtube.com/@SalesforceDevs",children:"Salesforce Developers"})," channel:"]}),"\n",(0,r.jsx)(t(),{playing:!1,url:"https://www.youtube.com/watch?v=CQdJxKZl0Y4"}),"\n",(0,r.jsx)(n.h2,{id:"set-up-your-local-environment",children:"Set Up Your Local Environment"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Clone the einstein-platform repository to your local environment."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" git clone https://github.com/salesforce/einstein-platform.git\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a directory for your project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mkdir llm-open-connector-hf\ncd llm-open-connector-hf\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Locate the source files specific to Hugging Face connector. In the local ",(0,r.jsx)(n.code,{children:"einstein-platform"})," project directory you cloned in step 1, navigate to the ",(0,r.jsx)(n.code,{children:"documentation/cookbook-assets/llm-open-connector-huggingface"})," folder. Copy all the files in this folder."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Paste the ",(0,r.jsx)(n.code,{children:"llm-open-connector-huggingface"})," files into the ",(0,r.jsx)(n.code,{children:"llm-open-connector-hf"})," directory you created in step 2."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install the required dependencies."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,r.jsxs)(n.p,{children:["This section outlines the folder structure of the ",(0,r.jsx)(n.code,{children:"llm-open-connector-hf"})," directory."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" llm-open-connector-hf/\n \u251c\u2500\u2500 config/\n \u2502   \u2514\u2500\u2500 index.js\n \u251c\u2500\u2500 controllers/\n \u2502   \u2514\u2500\u2500 chatController.js\n \u251c\u2500\u2500 middleware/\n \u2502   \u2514\u2500\u2500 index.js\n \u251c\u2500\u2500 routes/\n \u2502   \u2514\u2500\u2500 chat.js\n \u251c\u2500\u2500 utils/\n \u2502   \u2514\u2500\u2500 logger.js\n \u251c\u2500\u2500 .gitignore\n \u251c\u2500\u2500 .prettierrc\n \u251c\u2500\u2500 index.js\n \u251c\u2500\u2500 package.json\n \u2514\u2500\u2500 Procfile\n"})}),"\n",(0,r.jsx)(n.h3,{id:"project-description",children:"Project Description"}),"\n",(0,r.jsxs)(n.p,{children:["The following list provides a functional overview of each folder and file in the ",(0,r.jsx)(n.code,{children:"llm-open-connector-hf"})," directory."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"config/"}),": Holds configuration settings.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"index.js"}),": Exports configuration options for different environments."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"controllers/"}),": Manages the request handling logic for the chat API.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"chatController.js"}),": Calls the chat completion API."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"middleware/"}),": Contains custom middleware functions.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"index.js"}),": Includes functions for API key validation and error handling."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"routes/"}),": Defines API routes.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"chat.js"}),": Contains endpoints for chat completion functionality."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"utils/"}),": Utility functions for support tasks.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"logger.js"}),": A custom logger with data sanitization for secure logging."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".gitignore"}),": Lists files and directories that are ignored by Git, such as ",(0,r.jsx)(n.code,{children:"node_modules"})," and sensitive files."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".prettierrc"}),": The configuration file for Prettier, which enforces consistent code formatting across the project."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"index.js"}),": The main application file that initializes the server and routes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"package.json"}),": Contains metadata for the project and manages dependencies, scripts, and configurations."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Procfile"}),": Specifies process types and commands for deploying the app on platforms like Heroku."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-your-local-environment",children:"Configure Your Local Environment"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:".env"})," file in the root directory of the project and add these variables:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"PORT=3000\nHUGGING_FACE_API_KEY=your_hugging_face_api_key\nHUGGING_FACE_API_URL=https://api-inference.huggingface.co/models\nUSE_THIRD_PARTY_ROUTER=false\nALLOWED_ORIGINS=http://localhost:3000,https://your-salesforce-domain.com\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"your_hugging_face_api_key"})," with your own Hugging Face API key and adjust the ",(0,r.jsx)(n.code,{children:"ALLOWED_ORIGINS"})," as needed. Change ",(0,r.jsx)(n.code,{children:"ALLOWED_ORIGINS"})," to allowlist your Salesforce domain."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"HUGGING_FACE_API_URL"})," and ",(0,r.jsx)(n.code,{children:"USE_THIRD_PARTY_ROUTER"})," configuration options are important when using third-party routers like Together AI."]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For standard Hugging Face models, use ",(0,r.jsx)(n.code,{children:"HUGGING_FACE_API_URL=https://api-inference.huggingface.co"})," and ",(0,r.jsx)(n.code,{children:"USE_THIRD_PARTY_ROUTER=false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["For third-party routers (e.g. Together AI), use ",(0,r.jsx)(n.code,{children:"HUGGING_FACE_API_URL=https://router.huggingface.co/together"})," and ",(0,r.jsx)(n.code,{children:"USE_THIRD_PARTY_ROUTER=true"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Make sure your ",(0,r.jsx)(n.code,{children:".gitignore"})," file includes the ",(0,r.jsx)(n.code,{children:".env"})," file to avoid accidentally committing sensitive information."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"test-your-application-locally",children:"Test Your Application Locally"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Run your Node.js application locally:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm start\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The server starts on the port specified in your ",(0,r.jsx)(n.code,{children:".env"})," file. The default port is 3000."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Test the endpoints using a tool like cURL or Postman to ensure they're working correctly. Here are two examples:"}),"\n",(0,r.jsx)(n.p,{children:"a. Using a standard Hugging Face model (Mixtral):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/chat/completions \\\n-H \'Content-Type: application/json\' \\\n-H \'api-key: <use your HuggingFace access token here>\' \\\n-d \'{\n  "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",\n  "messages": [\n    {\n      "content": "What is the capital of Italy?",\n      "role": "user"\n    }\n  ],\n  "max_tokens": 100,\n  "temperature": 0.7,\n  "n": 2,\n  "parameters": {\n    "top_p": 0.9\n  }\n}\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["b. Using Qwen through Together AI (requires setting ",(0,r.jsx)(n.code,{children:"HUGGING_FACE_API_URL=https://router.huggingface.co/together"})," and ",(0,r.jsx)(n.code,{children:"USE_THIRD_PARTY_ROUTER=true"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/chat/completions \\\n-H \'Content-Type: application/json\' \\\n-H \'api-key: <use your Together AI access token here>\' \\\n-d \'{\n  "model": "Qwen/Qwen2.5-7B-Instruct-Turbo",\n  "messages": [\n    {\n      "content": "What is the capital of Italy?",\n      "role": "user"\n    }\n  ],\n  "max_tokens": 100,\n  "temperature": 0.7,\n  "n": 2,\n  "parameters": {\n    "top_p": 0.9\n  }\n}\'\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prepare-for-heroku-deployment",children:"Prepare for Heroku Deployment"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Initialize a Git repository in your project directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git init\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add your files to the repository:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git add .\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Commit your changes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'git commit -m "Initial commit"\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"update-your-default-branch",children:"Update Your Default Branch"}),"\n",(0,r.jsxs)(n.p,{children:["To switch the default branch used to deploy apps from ",(0,r.jsx)(n.code,{children:"master"})," to ",(0,r.jsx)(n.code,{children:"main"}),", follow these steps:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a branch locally:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git checkout -b main\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Delete the old default branch locally:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git branch -D master\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now, the local environment only knows about the ",(0,r.jsx)(n.code,{children:"main"})," branch."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Reset the git repository on the Heroku Platform:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"heroku-reset"})," command from the ",(0,r.jsx)(n.code,{children:"heroku-repo"})," CLI plugin. This command does not impact the running application."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsxs)(n.p,{children:["Communicate this change with your team. If other developers are unaware of the reset and push to ",(0,r.jsx)(n.code,{children:"master"}),", the reset will be overwritten."]})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["To switch the default branch in GitHub, refer to this article: ",(0,r.jsx)(n.a,{href:"https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch",children:"Setting the Default Branch"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"deploy-to-heroku",children:"Deploy to Heroku"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Login to the Heroku CLI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"heroku login\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a Heroku app:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"heroku create your-app-name\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"your-app-name"})," with a unique name for your application."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Set the API_KEY config var on Heroku:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"heroku config:set HUGGING_FACE_API_KEY=your_api_key_here -a your-app-name\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"your_api_key_here"})," with your own API key."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Set the ALLOWED_ORIGINS config var on Heroku:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"heroku config:set ALLOWED_ORIGINS=your_salesforce_domain_here -a your-app-name\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Replace ",(0,r.jsx)(n.code,{children:"your_salesforce_domain_here"})," with your own Salesforce domain."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Deploy your app to Heroku:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git push heroku main\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"test-your-deployed-application",children:"Test Your Deployed Application"}),"\n",(0,r.jsx)(n.p,{children:"You can test your deployed application using the deployed API endpoint. Use a tool like cURL or Postman to test the endpoints of your Node.js app:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Chat Completions: ",(0,r.jsx)(n.code,{children:"POST https://your-app-name.herokuapp.com/chat/completions"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["To test the ",(0,r.jsx)(n.code,{children:"chat/completions"})," endpoint with cURL, run this command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://still-beach-80840-58cbb07ae5f4.herokuapp.com/chat/completions \\\n-H \'Content-Type: application/json\' \\\n-H \'api-key: <use your HuggingFace access token here>\' \\\n-d \'{\n  "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",\n  "messages": [\n    {\n      "content": "What is the capital of Italy?",\n      "role": "user"\n    }\n  ],\n  "max_tokens": 100,\n  "temperature": 0.7,\n  "n": 2,\n  "parameters": {\n    "top_p": 0.9\n  }\n}\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"bring-your-connected-endpoint-to-salesforce-model-builder",children:"Bring Your Connected Endpoint to Salesforce Model Builder"}),"\n",(0,r.jsxs)(n.p,{children:["Follow the instructions in ",(0,r.jsx)(n.a,{href:"https://developer.salesforce.com/blogs/2024/10/build-generative-ai-solutions-with-llm-open-connector",children:"this developer blog"})," to use your model in Model Builder. When you activate your model, you can use it within ",(0,r.jsx)(n.a,{href:"https://developer.salesforce.com/docs/einstein/genai/guide/get-started-prompt-builder.html",children:"Prompt Builder"}),", the ",(0,r.jsx)(n.a,{href:"https://developer.salesforce.com/docs/einstein/genai/guide/models-api.html",children:"Models API"}),", and for building actions using prompt templates in Agent Builder. All these methods provide built-in security offered by the ",(0,r.jsx)(n.a,{href:"https://help.salesforce.com/s/articleView?id=sf.generative_ai_trust_layer.htm&type=5",children:"Einstein Trust Layer"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"current-features",children:"Current Features"}),"\n",(0,r.jsx)(n.p,{children:"The following list outlines the features included in this recipe:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Integration with the ",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/index",children:"Hugging Face"})," Serverless Inference API for ",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/en/tasks/chat-completion",children:"models"})," that support Chat Completion"]}),"\n",(0,r.jsx)(n.li,{children:"Express server with advanced security configurations"}),"\n",(0,r.jsx)(n.li,{children:"CORS configuration with customizable allowed origins"}),"\n",(0,r.jsx)(n.li,{children:"Rate limiting to prevent abuse"}),"\n",(0,r.jsx)(n.li,{children:"API key validation for protected routes"}),"\n",(0,r.jsx)(n.li,{children:"Comprehensive error handling and sanitized logging"}),"\n",(0,r.jsx)(n.li,{children:"Helmet.js integration for enhanced security headers"}),"\n",(0,r.jsx)(n.li,{children:"Chat completion controller with input validation and response reshaping"}),"\n",(0,r.jsxs)(n.li,{children:["Optimized message processing:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Concatenates multiple system messages into a single message as required by some LLMs"}),"\n",(0,r.jsx)(n.li,{children:"Preserves the order of user and assistant messages"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["POST ",(0,r.jsx)(n.code,{children:"/chat/completions"}),": Send a chat message and receive an AI-generated response.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The endpoint optimizes message processing by concatenating system messages."}),"\n",(0,r.jsxs)(n.li,{children:["The following example provides two system messages:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "messages": [\n    {"role": "system", "content": "You are a helpful assistant."},\n    {"role": "system", "content": "Always be polite."},\n    {"role": "user", "content": "Hello!"},\n    {"role": "assistant", "content": "Hi there!"},\n    {"role": "user", "content": "How are you?"}\n  ],\n  "model": "gpt-3.5-turbo",\n  "max_tokens": 150\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["The API processes the system messages into:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "messages": [\n    {"role": "system", "content": "You are a helpful assistant.\\nAlways be polite."},\n    {"role": "user", "content": "Hello!"},\n    {"role": "assistant", "content": "Hi there!"},\n    {"role": "user", "content": "How are you?"}\n  ],\n  "model": "gpt-3.5-turbo",\n  "max_tokens": 150\n}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"current-security-measures",children:"Current Security Measures"}),"\n",(0,r.jsx)(n.p,{children:"The recipe's security measures include a Helmet.js configuration, a CORS configuration, rate limiting, API key validation, and sanitized logging."}),"\n",(0,r.jsx)(n.p,{children:"The following list briefly highlights the current security measures:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A Helmet.js configuration with strict security settings:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Content Security Policy (CSP) with restrictive directives"}),"\n",(0,r.jsx)(n.li,{children:"Cross-Origin Embedder Policy"}),"\n",(0,r.jsx)(n.li,{children:"Cross-Origin Opener Policy"}),"\n",(0,r.jsx)(n.li,{children:"Cross-Origin Resource Policy"}),"\n",(0,r.jsx)(n.li,{children:"DNS Prefetch Control"}),"\n",(0,r.jsx)(n.li,{children:"Expect-CT header"}),"\n",(0,r.jsx)(n.li,{children:"Frameguard to prevent clickjacking"}),"\n",(0,r.jsx)(n.li,{children:"HTTP Strict Transport Security (HSTS)"}),"\n",(0,r.jsx)(n.li,{children:"IE No Open"}),"\n",(0,r.jsx)(n.li,{children:"X-Content-Type-Options nosniff"}),"\n",(0,r.jsx)(n.li,{children:"Origin-Agent-Cluster header"}),"\n",(0,r.jsx)(n.li,{children:"Permitted Cross-Domain Policies"}),"\n",(0,r.jsx)(n.li,{children:"Referrer-Policy"}),"\n",(0,r.jsx)(n.li,{children:"X-XSS-Protection"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"A CORS configuration restricts allowed origins."}),"\n",(0,r.jsx)(n.li,{children:"Rate limits: 100 requests per 15 minutes per IP."}),"\n",(0,r.jsx)(n.li,{children:"API key validation provides protected routes."}),"\n",(0,r.jsx)(n.li,{children:"Sanitized logging prevents accidental exposure of sensitive data."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"important-considerations",children:"Important Considerations"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["This cookbook uses the ",(0,r.jsx)(n.code,{children:"mistralai/Mixtral-8x7B-Instruct-v0.1"})," model in the example cURL requests. You can replace it with any supported model. For a list of supported model IDs, see ",(0,r.jsx)(n.a,{href:"https://huggingface.co/docs/api-inference/en/tasks/chat-completion",children:"Hugging Face Chat Completion"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Monitor your usage to manage costs, especially if you expect high traffic."}),"\n",(0,r.jsx)(n.li,{children:"Error handling and input validation must be improved for production use."}),"\n",(0,r.jsx)(n.li,{children:"Consider implementing further security measures for production use."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsxs)(n.p,{children:["This cookbook demonstrates how to set up an LLM Open Connector using Hugging Face Serverless API for Chat Completion endpoints for various models. For production purposes, remember to use Hugging Face's dedicated ",(0,r.jsx)(n.a,{href:"https://ui.endpoints.huggingface.co/",children:"Interference Endpoints"})," feature. Always optimize your implementation based on your specific requirements and expected usage patterns."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);